memberSearchIndex = [{"p":"lib","c":"DynamicGraph","l":"addEdge(int, int, double)","u":"addEdge(int,int,double)"},{"p":"lib","c":"MyGraph","l":"addEdge(int, int, double)","u":"addEdge(int,int,double)"},{"p":"lib","c":"MyGraph.Vertex","l":"addProperty(String, String)","u":"addProperty(java.lang.String,java.lang.String)"},{"p":"lib","c":"DynamicGraph","l":"addVertex(MyGraph.Vertex)","u":"addVertex(lib.MyGraph.Vertex)"},{"p":"lib","c":"MyGraph","l":"addVertex(MyGraph.Vertex)","u":"addVertex(lib.MyGraph.Vertex)"},{"p":"lib","c":"BFSDifferenceDFS","l":"BFSDifferenceDFS()","u":"%3Cinit%3E()"},{"p":"lib","c":"BFSDifferenceDFS","l":"bfsDifferenceDfs(MyGraph, int)","u":"bfsDifferenceDfs(lib.MyGraph,int)"},{"p":"lib","c":"MyGraph.Vertex","l":"clone()"},{"p":"lib","c":"Dijkstras","l":"dijkstras(MyGraph, MyGraph.Vertex, Map<MyGraph.Vertex, MyGraph.Vertex>, Map<MyGraph.Vertex, Double>)","u":"dijkstras(lib.MyGraph,lib.MyGraph.Vertex,java.util.Map,java.util.Map)"},{"p":"lib","c":"Edge","l":"Edge(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"lib","c":"Edge","l":"Edge(int, int, double)","u":"%3Cinit%3E(int,int,double)"},{"p":"lib","c":"Graph","l":"edgeIterator(int)"},{"p":"lib","c":"MyGraph","l":"edgeIterator(int)"},{"p":"lib","c":"Edge","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"lib","c":"MyGraph.Vertex","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"lib","c":"DynamicGraph","l":"exportAdjacencyMatrix()"},{"p":"lib","c":"MyGraph","l":"exportAdjacencyMatrix()"},{"p":"lib","c":"DynamicGraph","l":"filterVertices(String, String)","u":"filterVertices(java.lang.String,java.lang.String)"},{"p":"lib","c":"MyGraph","l":"filterVertices(String, String)","u":"filterVertices(java.lang.String,java.lang.String)"},{"p":"lib","c":"Edge","l":"getDest()"},{"p":"lib","c":"Graph","l":"getEdge(int, int)","u":"getEdge(int,int)"},{"p":"lib","c":"MyGraph","l":"getEdge(int, int)","u":"getEdge(int,int)"},{"p":"lib","c":"MyGraph.Vertex","l":"getId()"},{"p":"lib","c":"Graph","l":"getNumV()"},{"p":"lib","c":"MyGraph","l":"getNumV()"},{"p":"lib","c":"MyGraph.Vertex","l":"getProperty(String)","u":"getProperty(java.lang.String)"},{"p":"lib","c":"Edge","l":"getSource()"},{"p":"lib","c":"MyGraph","l":"getVertex(int)"},{"p":"lib","c":"MyGraph","l":"getVertices()"},{"p":"lib","c":"Edge","l":"getWeight()"},{"p":"lib","c":"MyGraph.Vertex","l":"getWeight()"},{"p":"lib","c":"Edge","l":"hashCode()"},{"p":"lib","c":"MyGraph.Vertex","l":"hashCode()"},{"p":"lib","c":"Graph","l":"insert(Edge)","u":"insert(lib.Edge)"},{"p":"lib","c":"MyGraph","l":"insert(Edge)","u":"insert(lib.Edge)"},{"p":"lib","c":"Graph","l":"isDirected()"},{"p":"lib","c":"MyGraph","l":"isDirected()"},{"p":"lib","c":"Graph","l":"isEdge(int, int)","u":"isEdge(int,int)"},{"p":"lib","c":"MyGraph","l":"isEdge(int, int)","u":"isEdge(int,int)"},{"p":"lib","c":"MyGraph","l":"MyGraph()","u":"%3Cinit%3E()"},{"p":"lib","c":"MyGraph","l":"MyGraph(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"lib","c":"MyGraph","l":"MyGraph(int, boolean)","u":"%3Cinit%3E(int,boolean)"},{"p":"lib","c":"DynamicGraph","l":"newVertex(String, double)","u":"newVertex(java.lang.String,double)"},{"p":"lib","c":"MyGraph","l":"newVertex(String, double)","u":"newVertex(java.lang.String,double)"},{"p":"lib","c":"DynamicGraph","l":"printGraph()"},{"p":"lib","c":"MyGraph","l":"printGraph()"},{"p":"lib","c":"MyGraph","l":"printMatrix(double[][])"},{"p":"lib","c":"DynamicGraph","l":"removeEdge(int, int)","u":"removeEdge(int,int)"},{"p":"lib","c":"MyGraph","l":"removeEdge(int, int)","u":"removeEdge(int,int)"},{"p":"lib","c":"DynamicGraph","l":"removeVertex(int)"},{"p":"lib","c":"MyGraph","l":"removeVertex(int)"},{"p":"lib","c":"DynamicGraph","l":"removeVertex(String)","u":"removeVertex(java.lang.String)"},{"p":"lib","c":"MyGraph","l":"removeVertex(String)","u":"removeVertex(java.lang.String)"},{"p":"lib","c":"MyGraph.Vertex","l":"setLabel(String)","u":"setLabel(java.lang.String)"},{"p":"lib","c":"Edge","l":"toString()"},{"p":"lib","c":"MyGraph.Vertex","l":"toString()"},{"p":"lib","c":"Edge","l":"UNWEIGHTED_EDGE"},{"p":"lib","c":"MyGraph.Vertex","l":"UNWEIGHTED_VERTEX"}];updateSearchResults();